<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<query name="listAllMediaInfos">
		SELECT * FROM MAPPING
	</query>
	<query name="updateTaskStatus">
	    UPDATE DATAPART SET STATE=? WHERE DATAPART_ID=?
	</query>
	
	<query name="updateTaskDataPart">
	    UPDATE DATAPART
	    SET 
	    CURRENT_DATA_TIME=?,
	    STATE=
	    (
	    	CASE WHEN 
	    	(ABS(SECONDS_BETWEEN(DATA_TO_TIME,?))>1
	    	AND (STATE='RUNNING' OR STATE='DELETED')
	    	) THEN 'READY'
	    	ELSE 'COMPLETE' END
	    ),
	    DATA_TO_TIME=
	    (
	    	CASE WHEN STATE='DELETED' THEN ?
	    	ELSE DATA_TO_TIME
	    	END
	    )
	    WHERE DATAPART_ID=?
	</query>

	<query name="listRunnableSocialTasks">
		SELECT TASK_ID,TASK_KEY,TASK_TYPE TYPE,MEDIA,STARTTIME START_TIME,
		CASE WHEN SECONDS_BETWEEN(DATA_TO_TIME,ENDTIME)>0 THEN DATA_TO_TIME ELSE
		ENDTIME END END_TIME,STATE
		FROM
		(
		select
		DP.DATAPART_ID TASK_ID,GT.TASK_KEY,T.TASK_TYPE,GT.MEDIA,DP.DATA_TO_TIME,DP.STATE,MIN(T.INTERVALS)
		INTERVALS,CURRENT_TIMESTAMP ENDTIME,
		SECONDS_BETWEEN(IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME),CURRENT_TIMESTAMP)
		SECONDS_SINCE,
		IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME) STARTTIME
		from DATAPART DP INNER JOIN TASKDATAMAPPING TDM
		ON DP.DATAPART_ID=TDM.DATAPART_ID
		INNER JOIN TASK T
		ON TDM.TASK_ID=T.TASK_ID
		INNER JOIN GENERALTASK_REFE1_REF GRR ON T.TASKID=GRR.TASK_VIEW_TASK_VIEWID
		INNER JOIN GENERALTASK GT ON GRR.GENERALTASK_GENERALTASKID=GT.GENERALTASKID
		WHERE (DP.STATE='INITIAL' OR DP.STATE='READY')
		AND T.TASK_TYPE IN ('SocialArticleKeyword','SocialArticleAccount','SocialAccount')
		GROUP BY
		DP.DATAPART_ID,GT.TASK_KEY,T.TASK_TYPE,GT.MEDIA,DP.DATA_FROM_TIME,DP.DATA_TO_TIME,DP.STATE,CURRENT_DATA_TIME,SECONDS_BETWEEN(CURRENT_TIMESTAMP,IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME))
		)
		WHERE (STATE='INITIAL' AND SECONDS_SINCE>0) OR (STATE='READY' AND SECONDS_SINCE-INTERVALS*60>0 AND
		(SECONDS_SINCE-TO_INT(SECONDS_SINCE/(INTERVALS*60))*(INTERVALS*60)
		BETWEEN 0 AND 16)
		)
	</query>
	
	<query name="listRunnableAccountArticleTasks">
	SELECT DATAPART_ID TASK_ID,TASK_TYPE TYPE,TASK_KEY,MEDIA,MIN(START_TIME1) START_TIME,END_TIME,STATE FROM
		(
		 select
		 DP.DATAPART_ID,
		 DP.TASK_TYPE,
		DP.TASK_KEY,
		DP.MEDIA,
		DP.STATE,
		CASE WHEN ADD_SECONDS(CURRENT_TIMESTAMP,INTERVALS*TRACE_COUNT*(-60))&lt;DP.DATA_FROM_TIME THEN DP.DATA_FROM_TIME ELSE ADD_SECONDS(CURRENT_TIMESTAMP,INTERVALS*TRACE_COUNT*(-60)) END START_TIME1,
		CASE WHEN CURRENT_TIMESTAMP &lt; DP.DATA_TO_TIME THEN CURRENT_TIMESTAMP ELSE DP.DATA_TO_TIME END END_TIME,
		INTERVALS,
		DP.DATA_FROM_TIME,
		DP.DATA_TO_TIME
		from DATAPART DP 
		INNER JOIN TASKDATAMAPPING TDM ON DP.DATAPART_ID=TDM.DATAPART_ID 
		INNER JOIN TASK T ON TDM.TASK_ID=T.TASK_ID 
		INNER JOIN GENERALTASK_REFE1_REF GRR ON T.TASKID=GRR.TASK_VIEW_TASK_VIEWID
		INNER JOIN GENERALTASK GT ON GRR.GENERALTASK_GENERALTASKID=GT.GENERALTASKID
		WHERE (DP.STATE='INITIAL' 
			OR DP.STATE='READY') 
		AND T.TASK_TYPE IN ('SocialAccountArticle') AND 
		CURRENT_TIMESTAMP &lt; (ADD_SECONDS(DP.DATA_TO_TIME,INTERVALS*(TRACE_COUNT+1)*60))
		AND ADD_SECONDS(CURRENT_TIMESTAMP,INTERVALS*TRACE_COUNT*(-60))&lt;DP.DATA_TO_TIME
		)
	GROUP BY DATAPART_ID,TASK_KEY,MEDIA,END_TIME,STATE,TASK_TYPE
	HAVING(
	(
	(SECONDS_BETWEEN(MIN(DATA_FROM_TIME),CURRENT_TIMESTAMP)-
	TO_INT(SECONDS_BETWEEN(MIN(DATA_FROM_TIME),CURRENT_TIMESTAMP)/(MIN(INTERVALS)*60))*(MIN(INTERVALS)*60) BETWEEN 0 AND 16)
	AND STATE='READY') OR STATE='INITIAL'
	)
	</query>
	
	<query name="listRunnableTraditionalTasks">
		SELECT TASK_ID,TASK_KEY,CASE WHEN MEDIA='RSS' OR MEDIA='网页' THEN 'Traditional' ELSE 'Forum' END MEDIA,TASK_TYPE TYPE,STARTTIME START_TIME,
		CASE WHEN SECONDS_BETWEEN(DATA_TO_TIME,ENDTIME)>0 THEN DATA_TO_TIME ELSE
		ENDTIME END END_TIME,STATE
		FROM
		(
		select
		DP.DATAPART_ID TASK_ID,DP.MEDIA,TUM.URL TASK_KEY,T.TASK_TYPE,DP.DATA_TO_TIME,DP.STATE,MIN(T.INTERVALS)
		INTERVALS,CURRENT_TIMESTAMP ENDTIME,
		SECONDS_BETWEEN(IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME),CURRENT_TIMESTAMP)
		SECONDS_SINCE,
		IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME) STARTTIME
		from DATAPART DP INNER JOIN TASKDATAMAPPING TDM
		ON DP.DATAPART_ID=TDM.DATAPART_ID
		INNER JOIN TASK T
		ON TDM.TASK_ID=T.TASK_ID
		INNER JOIN GENERALTASK_REFE1_REF GRR ON T.TASKID=GRR.TASK_VIEW_TASK_VIEWID
		INNER JOIN GENERALTASK GT ON GT.GENERALTASKID=GRR.GENERALTASK_GENERALTASKID
		INNER JOIN GENERALTASK_REFEURL_REF GRUR ON GT.GENERALTASKID=GRUR.GENERALTASK_GENERALTASKID
		INNER JOIN TASKURLMAPPING TUM ON GRUR.TASKURLMAPPING_TASKURLMAPPINGID=TUM.TASKURLMAPPINGID
		WHERE (DP.STATE='INITIAL' OR DP.STATE='READY')
		AND T.TASK_TYPE IN ('TraditionalArticleRSS','TraditionalArticleRSSTrace','TraditionalArticleWebPage','TraditionalArticleWebPageTrace','ForumArticle')
		GROUP BY
		DP.DATAPART_ID,TUM.URL,DP.MEDIA,T.TASK_TYPE,DP.DATA_FROM_TIME,DP.DATA_TO_TIME,DP.STATE,CURRENT_DATA_TIME,SECONDS_BETWEEN(CURRENT_TIMESTAMP,IFNULL(CURRENT_DATA_TIME,DP.DATA_FROM_TIME))
		)
		WHERE (STATE='INITIAL' AND SECONDS_SINCE>0) OR (STATE='READY' AND SECONDS_SINCE-INTERVALS*60>0 AND
		(SECONDS_SINCE-TO_INT(SECONDS_SINCE/(INTERVALS*60))*(INTERVALS*60)
		BETWEEN 0 AND 16)
		)
	</query>
	
	
	
</sqls>